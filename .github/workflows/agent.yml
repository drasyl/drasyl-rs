name: Agent

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        job_name:
          - linux-amd64
          - linux-arm64
          - macos-amd64
          - macos-arm64
          - windows-amd64

        include:
          - job_name: linux-amd64
            os: ubuntu-22.04
            path: |
              target/release/drasyl
              target/release/*.deb

          - job_name: linux-arm64
            os: [ self-hosted, linux, ARM64 ]
            path: |
              target/release/drasyl
              target/release/*.deb

          - job_name: macos-amd64
            os: macOS-13
            path: target/release/drasyl

          - job_name: macos-arm64
            os: macOS-latest
            path: target/release/drasyl

          - job_name: windows-amd64
            os: windows-latest
            path: target/release/drasyl.exe

    name: Build drasyl-agent on ${{ matrix.job_name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        if: success() && matrix.job_name == 'linux-arm64'

      - name: Install libssl-dev
        run: apt-get update -qq && apt-get install -y libssl-dev
        if: success() && matrix.job_name == 'linux-arm64'

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build drasyl-agent
        run: cargo build --verbose --package drasyl-agent --features dns --release

      - name: Bundle drasyl-agent.deb
        run: ./drasyl-agent/bundle-debian.sh --release
        if: success() && startsWith(matrix.job_name, 'linux-')

      - name: Upload drasyl-agent artifact
        uses: actions/upload-artifact@v4
        with:
          name: drasyl-${{ matrix.job_name }}
          path: ${{ matrix.path }}