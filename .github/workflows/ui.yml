name: drasyl-ui

on:
  push:
    branches:
      - master
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        job_name:
          - linux-amd64
          - macos-amd64
          - macos-arm64
          - windows-amd64

        include:
          - job_name: linux-amd64
            os: ubuntu-22.04
            path: |
              target/release/drasyl-ui
              target/release/*.deb

          - job_name: macos-amd64
            os: macOS-13
            path: |
              target/release/drasyl-ui
              target/release/*.app
              target/release/*.pkg

          - job_name: macos-arm64
            os: macOS-latest
            path: |
              target/release/drasyl-ui
              target/release/*.app
              target/release/*.pkg

          - job_name: windows-amd64
            os: windows-latest
            path: |
              target/release/drasyl-ui.exe
              target/release/drasyl_*_windows.exe

    name: Build drasyl-ui on ${{ matrix.job_name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libpango1.0-dev \
            libxdo-dev \
            libayatana-appindicator3-dev
        if: startsWith(matrix.os, 'ubuntu-')

      - name: Build drasyl-ui
        run: cargo build --verbose --package drasyl-ui --release

      - name: Bundle drasyl UI.app
        run: ./drasyl-ui/bundle-macos.sh --release
        if: success() && startsWith(matrix.os, 'macOS-')

      - name: Build drasyl-sdn
        run: cargo build --verbose --package drasyl-sdn --features prometheus,dns --release
        if: startsWith(matrix.os, 'macOS-') || startsWith(matrix.os, 'windows-')

      - name: Create macOS Installer
        run: ./drasyl-ui/installer-macos.sh --release
        if: success() && startsWith(matrix.os, 'macOS-')

      - name: Bundle drasyl-ui.deb
        run: ./drasyl-ui/bundle-debian.sh --release
        if: success() && startsWith(matrix.os, 'ubuntu-')

      - name: Create Windows Installer
        uses: joncloud/makensis-action@v4.1
        with:
          script-file: ./drasyl-ui/installer-windows.nsi
        if: success() && startsWith(matrix.os, 'windows-')

      - name: Upload drasyl-ui artifact(s)
        uses: actions/upload-artifact@v4
        with:
          name: drasyl-ui-${{ matrix.job_name }}
          path: ${{ matrix.path }}